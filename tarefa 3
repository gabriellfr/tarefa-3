#include <stdio.h>
#include <stdlib.h>
#include <string.h>


typedef struct {
    int codigo;
    char descricao[100];
    int quantidade;
    float valor;
} Produto;


typedef struct Node {
    Produto produto;
    struct Node *prox;
} Node;


Node *inicializarLista() {
    return NULL;
}


Node *adicionarProduto(Node *lista) {
    Produto novoProduto;
    printf("Digite o código do produto: ");
    scanf("%d", &novoProduto.codigo);
    printf("Digite a descrição do produto: ");
    scanf(" %[^\n]", novoProduto.descricao);
    printf("Digite a quantidade do produto: ");
    scanf("%d", &novoProduto.quantidade);
    printf("Digite o valor do produto: ");
    scanf("%f", &novoProduto.valor);

    Node *novoNode = (Node *)malloc(sizeof(Node));
    novoNode->produto = novoProduto;
    novoNode->prox = lista;

    return novoNode;
}


void imprimirRelatorio(Node *lista) {
    printf("\nRelatório de Estoque:\n");
    printf("Código | Descrição | Quantidade | Valor\n");
    printf("----------------------------------------\n");

    Node *atual = lista;
    while (atual != NULL) {
        printf("%6d | %-20s | %10d | R$ %.2f\n", atual->produto.codigo, atual->produto.descricao,
               atual->produto.quantidade, atual->produto.valor);
        atual = atual->prox;
    }
    printf("\n");
}


Node *pesquisarProduto(Node *lista, int codigo) {
    Node *atual = lista;
    while (atual != NULL) {
        if (atual->produto.codigo == codigo) {
            return atual;
        }
        atual = atual->prox;
    }
    return NULL;
}


Node *removerProduto(Node *lista, int codigo) {
    Node *atual = lista;
    Node *anterior = NULL;

    while (atual != NULL) {
        if (atual->produto.codigo == codigo) {
            if (anterior == NULL) {
                lista = atual->prox;
            } else {
                anterior->prox = atual->prox;
            }
            free(atual);
            printf("Produto removido com sucesso.\n");
            return lista;
        }
        anterior = atual;
        atual = atual->prox;
    }

    printf("Produto não encontrado.\n");
    return lista;
}

int main() {
    Node *estoque = inicializarLista();
    int opcao, codigo;
    
    do {
        printf("Menu:\n");
        printf("1. Adicionar Produto\n");
        printf("2. Imprimir Relatório\n");
        printf("3. Pesquisar Produto\n");
        printf("4. Remover Produto\n");
        printf("0. Sair\n");
        printf("Escolha uma opção: ");
        scanf("%d", &opcao);

        switch (opcao) {
            case 1:
                estoque = adicionarProduto(estoque);
                break;
            case 2:
                imprimirRelatorio(estoque);
                break;
            case 3:
                printf("Digite o código do produto a ser pesquisado: ");
                scanf("%d", &codigo);
                Node *resultado = pesquisarProduto(estoque, codigo);
                if (resultado != NULL) {
                    printf("\nProduto encontrado:\n");
                    printf("Código | Descrição | Quantidade | Valor\n");
                    printf("----------------------------------------\n");
                    printf("%6d | %-20s | %10d | R$ %.2f\n\n", resultado->produto.codigo, resultado->produto.descricao,
                           resultado->produto.quantidade, resultado->produto.valor);
                } else {
                    printf("\nProduto não encontrado.\n\n");
                }
                break;
            case 4:
                printf("Digite o código do produto a ser removido: ");
                scanf("%d", &codigo);
                estoque = removerProduto(estoque, codigo);
                break;
            case 0:
                printf("Saindo do programa. Até mais!\n");
                break;
            default:
                printf("Opção inválida. Tente novamente.\n");
        }

    } while (opcao != 0);

    return 0;
}
